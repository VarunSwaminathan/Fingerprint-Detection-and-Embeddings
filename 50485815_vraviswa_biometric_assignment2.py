# -*- coding: utf-8 -*-
"""50485815_vraviswa_biometric_assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hqcjUtgP3kBit5YMU0lg8GSNFFAwPkZe
"""

!pip install mediapipe

# from google.colab import files
# uploaded = files.upload()

# from zipfile import ZipFile
# file_name = "/content/sample_test_images_distal_segmentation.zip"

# with ZipFile(file_name, 'r') as zip:
#   zip.extractall()
#   print('Done')

import os
import cv2
import mediapipe as mp

mp_hands = mp.solutions.hands

def fingertips_detection(input_folder, output_folder):
  if not os.path.exists(output_folder):
      os.makedirs(output_folder)

  with mp_hands.Hands(static_image_mode=True, max_num_hands=2, min_detection_confidence=0.5) as hands:
    for filename in os.listdir(input_folder):
        if filename.endswith('.jpg') or filename.endswith('.jpeg') or filename.endswith('.png'):
            image = cv2.imread(os.path.join(input_folder, filename))
            image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

            results = hands.process(image)

            if results.multi_hand_landmarks:
                annotated_image = image.copy()
                for hand_landmarks in results.multi_hand_landmarks:
                    for idx, landmark in enumerate(hand_landmarks.landmark):
                        if idx in [4, 8, 12, 16, 20]:
                            x, y = int(landmark.x * image.shape[1]), int(landmark.y * image.shape[0])
                            bbox_size = 100 
                            x_min, x_max = max(0, x-bbox_size//2), min(image.shape[1], x+bbox_size//2)
                            y_min, y_max = max(0, y-bbox_size//2), min(image.shape[0], y+bbox_size//2)
                            cv2.rectangle(annotated_image, (x_min, y_min), (x_max, y_max), (0, 255, 0), thickness=2)

                output_path = os.path.join(output_folder, filename)
                cv2.imwrite(output_path, cv2.cvtColor(annotated_image, cv2.COLOR_RGB2BGR))

train_folder = "C:\Users\varun\Downloads\50485815_vraviswa_assignment2\Train_dataset"
train_saved = "C:\Users\varun\Downloads\50485815_vraviswa_assignment2\train saved"

fingertips_detection(train_folder, train_saved)

test_images = 'C:\Users\varun\Downloads\50485815_vraviswa_assignment2\sample_test_images_distal_segmentation'
test_saved = "C:\Users\varun\Downloads\50485815_vraviswa_assignment2\test saved"

fingertips_detection(test_images, test_saved)